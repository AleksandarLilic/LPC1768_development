; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\bme280.o --depend=.\objects\bme280.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Drivers -I.\RTE\Device\LPC1768 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.5.0\Device\Include -D__UVISION_VERSION=524 -D_RTE_ -DLPC175x_6x --omf_browse=.\objects\bme280.crf Drivers\bme280.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.are_settings_changed||, CODE, READONLY, ALIGN=1

are_settings_changed PROC
        MOV      r2,r0
        MOVS     r0,#0
        AND      r3,r2,r1
        CBZ      r3,|L1.14|
        MOVS     r0,#1
        B        |L1.16|
|L1.14|
        MOVS     r0,#0
|L1.16|
        BX       lr
        ENDP


        AREA ||i.bme280_compensate_data||, CODE, READONLY, ALIGN=1

bme280_compensate_data PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r4,r2
        MOV      r7,r3
        MOV      r8,#0
        CBZ      r6,|L2.80|
        CBZ      r4,|L2.80|
        CBZ      r7,|L2.80|
        MOVS     r0,#0
        STR      r0,[r4,#4]
        STR      r0,[r4,#0]
        STR      r0,[r4,#8]
        AND      r0,r5,#7
        CBZ      r0,|L2.46|
        MOV      r1,r7
        MOV      r0,r6
        BL       compensate_temperature
        STR      r0,[r4,#4]
|L2.46|
        AND      r0,r5,#1
        CBZ      r0,|L2.62|
        MOV      r1,r7
        MOV      r0,r6
        BL       compensate_pressure
        STR      r0,[r4,#0]
|L2.62|
        AND      r0,r5,#4
        CBZ      r0,|L2.84|
        MOV      r1,r7
        MOV      r0,r6
        BL       compensate_humidity
        STR      r0,[r4,#8]
        B        |L2.84|
|L2.80|
        MOV      r8,#0xffffffff
|L2.84|
        MOV      r0,r8
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.bme280_get_regs||, CODE, READONLY, ALIGN=1

bme280_get_regs PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r7,r1
        MOV      r8,r2
        MOV      r4,r3
        MOV      r0,r4
        BL       null_ptr_check
        MOV      r6,r0
        CBNZ     r6,|L3.54|
        LDRB     r0,[r4,#2]
        CMP      r0,#1
        BEQ      |L3.32|
        ORR      r5,r5,#0x80
|L3.32|
        LDRB     r0,[r4,#1]
        MOV      r3,r8
        MOV      r2,r7
        MOV      r1,r5
        LDR      r12,[r4,#4]
        BLX      r12
        MOV      r6,r0
        CBZ      r6,|L3.54|
        MVN      r6,#3
|L3.54|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.bme280_get_sensor_data||, CODE, READONLY, ALIGN=1

bme280_get_sensor_data PROC
        PUSH     {r4-r7,lr}
        SUB      sp,sp,#0x14
        MOV      r7,r0
        MOV      r5,r1
        MOV      r4,r2
        MOVS     r0,#0
        STR      r0,[sp,#0xc]
        STR      r0,[sp,#0x10]
        STR      r0,[sp,#0]
        STR      r0,[sp,#4]
        STR      r0,[sp,#8]
        MOV      r0,r4
        BL       null_ptr_check
        MOV      r6,r0
        CBNZ     r6,|L4.76|
        CBZ      r5,|L4.76|
        MOV      r3,r4
        MOVS     r2,#8
        ADD      r1,sp,#0xc
        MOVS     r0,#0xf7
        BL       bme280_get_regs
        MOV      r6,r0
        CBNZ     r6,|L4.80|
        MOV      r1,sp
        ADD      r0,sp,#0xc
        BL       bme280_parse_sensor_data
        ADD      r3,r4,#0x10
        MOV      r2,r5
        MOV      r1,sp
        MOV      r0,r7
        BL       bme280_compensate_data
        MOV      r6,r0
        B        |L4.80|
|L4.76|
        MOV      r6,#0xffffffff
|L4.80|
        MOV      r0,r6
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.bme280_get_sensor_mode||, CODE, READONLY, ALIGN=1

bme280_get_sensor_mode PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r0,r5
        BL       null_ptr_check
        MOV      r6,r0
        CBNZ     r6,|L5.38|
        MOV      r3,r5
        MOVS     r2,#1
        MOV      r1,r4
        MOVS     r0,#0xf4
        BL       bme280_get_regs
        MOV      r6,r0
        LDRB     r0,[r4,#0]
        AND      r0,r0,#3
        STRB     r0,[r4,#0]
|L5.38|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.bme280_get_sensor_settings||, CODE, READONLY, ALIGN=1

bme280_get_sensor_settings PROC
        PUSH     {r3-r5,lr}
        MOV      r5,r0
        MOV      r0,r5
        BL       null_ptr_check
        MOV      r4,r0
        CBNZ     r4,|L6.40|
        MOV      r3,r5
        MOVS     r2,#4
        MOV      r1,sp
        MOVS     r0,#0xf2
        BL       bme280_get_regs
        MOV      r4,r0
        CBNZ     r4,|L6.40|
        ADD      r1,r5,#0x38
        MOV      r0,sp
        BL       parse_device_settings
|L6.40|
        MOV      r0,r4
        POP      {r3-r5,pc}
        ENDP


        AREA ||i.bme280_init||, CODE, READONLY, ALIGN=1

bme280_init PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOVS     r6,#5
        MOVS     r0,#0
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       null_ptr_check
        MOV      r5,r0
        CBNZ     r5,|L7.94|
        B        |L7.82|
|L7.22|
        MOV      r3,r4
        MOVS     r2,#1
        MOV      r1,sp
        MOVS     r0,#0xd0
        BL       bme280_get_regs
        MOV      r5,r0
        CBNZ     r5,|L7.72|
        LDRB     r0,[sp,#0]
        CMP      r0,#0x60
        BNE      |L7.72|
        LDRB     r0,[sp,#0]
        STRB     r0,[r4,#0]
        MOV      r0,r4
        BL       bme280_soft_reset
        MOV      r5,r0
        CBNZ     r5,|L7.70|
        MOV      r0,r4
        BL       get_calib_data
        MOV      r5,r0
|L7.70|
        B        |L7.86|
|L7.72|
        MOVS     r0,#1
        LDR      r1,[r4,#0xc]
        BLX      r1
        SUBS     r0,r6,#1
        UXTB     r6,r0
|L7.82|
        CMP      r6,#0
        BNE      |L7.22|
|L7.86|
        NOP      
        CBNZ     r6,|L7.94|
        MVN      r5,#1
|L7.94|
        MOV      r0,r5
        POP      {r3-r7,pc}
        ENDP


        AREA ||i.bme280_parse_sensor_data||, CODE, READONLY, ALIGN=1

bme280_parse_sensor_data PROC
        PUSH     {r4,r5,lr}
        LDRB     r5,[r0,#0]
        LSLS     r3,r5,#12
        LDRB     r5,[r0,#1]
        LSLS     r2,r5,#4
        LDRB     r5,[r0,#2]
        LSRS     r4,r5,#4
        ORR      r5,r3,r2
        ORRS     r5,r5,r4
        STR      r5,[r1,#0]
        LDRB     r5,[r0,#3]
        LSLS     r3,r5,#12
        LDRB     r5,[r0,#4]
        LSLS     r2,r5,#4
        LDRB     r5,[r0,#5]
        LSRS     r4,r5,#4
        ORR      r5,r3,r2
        ORRS     r5,r5,r4
        STR      r5,[r1,#4]
        LDRB     r5,[r0,#6]
        LSLS     r2,r5,#8
        LDRB     r3,[r0,#7]
        ORR      r5,r3,r2
        STR      r5,[r1,#8]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.bme280_set_regs||, CODE, READONLY, ALIGN=1

bme280_set_regs PROC
        PUSH     {r4-r10,lr}
        SUB      sp,sp,#0x18
        MOV      r5,r0
        MOV      r8,r1
        MOV      r4,r2
        MOV      r6,r3
        CMP      r4,#0xa
        BLE      |L9.20|
        MOVS     r4,#0xa
|L9.20|
        MOV      r0,r6
        BL       null_ptr_check
        MOV      r9,r0
        CMP      r9,#0
        BNE      |L9.146|
        CBZ      r5,|L9.136|
        CMP      r8,#0
        BEQ      |L9.146|
        CBZ      r4,|L9.138|
        LDRB     r0,[r8,#0]
        STRB     r0,[sp,#4]
        LDRB     r0,[r6,#2]
        CMP      r0,#1
        BEQ      |L9.78|
        MOVS     r7,#0
        B        |L9.74|
|L9.62|
        LDRB     r0,[r5,r7]
        AND      r0,r0,#0x7f
        STRB     r0,[r5,r7]
        ADDS     r0,r7,#1
        UXTB     r7,r0
|L9.74|
        CMP      r7,r4
        BLT      |L9.62|
|L9.78|
        CMP      r4,#1
        BLE      |L9.106|
        MOV      r3,r4
        MOV      r2,r8
        ADD      r1,sp,#4
        MOV      r0,r5
        BL       interleave_reg_addr
        MOVS     r0,#1
        RSB      r0,r0,r4,LSL #1
        UXTH     r10,r0
        B        |L9.108|
|L9.106|
        MOV      r10,r4
|L9.108|
        LDRB     r1,[r5,#0]
        LDRB     r0,[r6,#1]
        MOV      r3,r10
        ADD      r2,sp,#4
        LDR      r12,[r6,#8]
        BLX      r12
        MOV      r9,r0
        CMP      r9,#0
        BEQ      |L9.150|
        MVN      r9,#3
        B        |L9.150|
|L9.136|
        B        |L9.146|
|L9.138|
        B        |L9.140|
|L9.140|
        MVN      r9,#2
        B        |L9.150|
|L9.146|
        MOV      r9,#0xffffffff
|L9.150|
        MOV      r0,r9
        ADD      sp,sp,#0x18
        POP      {r4-r10,pc}
        ENDP


        AREA ||i.bme280_set_sensor_mode||, CODE, READONLY, ALIGN=1

bme280_set_sensor_mode PROC
        PUSH     {r3-r7,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r0,r5
        BL       null_ptr_check
        MOV      r4,r0
        CBNZ     r4,|L10.54|
        MOV      r1,r5
        MOV      r0,sp
        BL       bme280_get_sensor_mode
        MOV      r4,r0
        CBNZ     r4,|L10.42|
        LDRB     r0,[sp,#0]
        CBZ      r0,|L10.42|
        MOV      r0,r5
        BL       put_device_to_sleep
        MOV      r4,r0
|L10.42|
        CBNZ     r4,|L10.54|
        MOV      r1,r5
        MOV      r0,r6
        BL       write_power_mode
        MOV      r4,r0
|L10.54|
        MOV      r0,r4
        POP      {r3-r7,pc}
        ENDP


        AREA ||i.bme280_set_sensor_settings||, CODE, READONLY, ALIGN=1

bme280_set_sensor_settings PROC
        PUSH     {r3-r7,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r0,r4
        BL       null_ptr_check
        MOV      r5,r0
        CBNZ     r5,|L11.94|
        MOV      r1,r4
        MOV      r0,sp
        BL       bme280_get_sensor_mode
        MOV      r5,r0
        CBNZ     r5,|L11.42|
        LDRB     r0,[sp,#0]
        CBZ      r0,|L11.42|
        MOV      r0,r4
        BL       put_device_to_sleep
        MOV      r5,r0
|L11.42|
        CBNZ     r5,|L11.94|
        MOV      r1,r6
        MOVS     r0,#7
        BL       are_settings_changed
        CBZ      r0,|L11.68|
        MOV      r2,r4
        ADD      r1,r4,#0x38
        MOV      r0,r6
        BL       set_osr_settings
        MOV      r5,r0
|L11.68|
        CBNZ     r5,|L11.94|
        MOV      r1,r6
        MOVS     r0,#0x18
        BL       are_settings_changed
        CBZ      r0,|L11.94|
        MOV      r2,r4
        ADD      r1,r4,#0x38
        MOV      r0,r6
        BL       set_filter_standby_settings
        MOV      r5,r0
|L11.94|
        MOV      r0,r5
        POP      {r3-r7,pc}
        ENDP


        AREA ||i.bme280_soft_reset||, CODE, READONLY, ALIGN=1

bme280_soft_reset PROC
        PUSH     {r2-r6,lr}
        MOV      r4,r0
        MOVS     r0,#0xe0
        STR      r0,[sp,#4]
        MOVS     r0,#0xb6
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       null_ptr_check
        MOV      r5,r0
        CBNZ     r5,|L12.42|
        MOV      r3,r4
        MOVS     r2,#1
        MOV      r1,sp
        ADD      r0,sp,#4
        BL       bme280_set_regs
        MOV      r5,r0
        MOVS     r0,#2
        LDR      r1,[r4,#0xc]
        BLX      r1
|L12.42|
        MOV      r0,r5
        POP      {r2-r6,pc}
        ENDP


        AREA ||i.compensate_humidity||, CODE, READONLY, ALIGN=1

compensate_humidity PROC
        PUSH     {r4-r11,lr}
        MOV      r12,r0
        MOV      r2,r1
        MOV      r8,#0x19000
        LDR      r0,[r2,#0x24]
        SUB      r4,r0,#0x12c00
        LDR      r0,[r12,#8]
        LSLS     r5,r0,#14
        LDRH     r0,[r2,#0x1e]
        LSLS     r1,r0,#20
        LDRSH    r0,[r2,#0x20]
        MUL      r6,r0,r4
        SUB      r9,r5,r1
        SUB      r9,r9,r6
        ADD      r0,r9,#0x4000
        ASR      r9,r0,#31
        ADD      r9,r0,r9,LSR #17
        ASR      r3,r9,#15
        LDRSB    r9,[r2,#0x22]
        MUL      r0,r9,r4
        ASR      r9,r0,#31
        ADD      r9,r0,r9,LSR #22
        ASR      r5,r9,#10
        LDRB     r9,[r2,#0x1c]
        MUL      r0,r9,r4
        ASR      r9,r0,#31
        ADD      r9,r0,r9,LSR #21
        ASR      r1,r9,#11
        ADD      r9,r1,#0x8000
        MUL      r0,r5,r9
        ASR      r9,r0,#31
        ADD      r9,r0,r9,LSR #22
        ASR      r9,r9,#10
        ADD      r6,r9,#0x200000
        LDRSH    r9,[r2,#0x1a]
        MUL      r9,r9,r6
        ADD      r0,r9,#0x2000
        ASR      r9,r0,#31
        ADD      r9,r0,r9,LSR #18
        ASR      r5,r9,#14
        MUL      r1,r3,r5
        MOV      r0,r1
        ASR      r11,r1,#31
        ADD      r11,r1,r11,LSR #17
        ASR      r11,r11,#15
        MOV      r10,r1
        ASR      lr,r1,#31
        ADD      lr,r1,lr,LSR #17
        ASR      lr,lr,#15
        MUL      r9,r11,lr
        ASR      r11,r9,#31
        ADD      r11,r9,r11,LSR #25
        ASR      r6,r11,#7
        LDRB     r9,[r2,#0x18]
        MUL      r0,r9,r6
        ASR      r9,r0,#31
        ADD      r9,r0,r9,LSR #28
        SUB      r3,r1,r9,ASR #4
        CMP      r3,#0
        BGE      |L13.224|
        MOVS     r0,#0
        B        |L13.226|
|L13.224|
        MOV      r0,r3
|L13.226|
        MOV      r3,r0
        CMP      r3,#0x19000000
        BLE      |L13.240|
        MOV      r0,#0x19000000
        B        |L13.242|
|L13.240|
        MOV      r0,r3
|L13.242|
        MOV      r3,r0
        MOV      r0,r3
        ASR      r9,r3,#31
        ADD      r9,r3,r9,LSR #20
        ASR      r7,r9,#12
        CMP      r7,r8
        BLS      |L13.264|
        MOV      r7,r8
|L13.264|
        MOV      r0,r7
        POP      {r4-r11,pc}
        ENDP


        AREA ||i.compensate_pressure||, CODE, READONLY, ALIGN=2

compensate_pressure PROC
        PUSH     {r2-r11,lr}
        MOV      r6,r0
        MOV      r2,r1
        MOV      r5,#0x7530
        LDR      r12,|L14.400|
        LDR      r4,[r2,#0x24]
        ADD      r8,r4,r4,LSR #31
        ASR      r8,r8,#1
        SUB      r1,r8,#0xfa00
        MOV      r4,r1
        ASR      r10,r1,#31
        ADD      r10,r1,r10,LSR #30
        ASR      r10,r10,#2
        MOV      r9,r1
        ASR      r11,r1,#31
        ADD      r11,r1,r11,LSR #30
        ASR      r11,r11,#2
        MUL      r8,r10,r11
        ASR      r10,r8,#31
        ADD      r10,r8,r10,LSR #21
        ASR      r10,r10,#11
        LDRSH    r11,[r2,#0x10]
        MUL      r3,r10,r11
        LDRSH    r4,[r2,#0xe]
        MULS     r4,r1,r4
        ADD      r3,r3,r4,LSL #1
        MOV      r4,r3
        ASR      r8,r3,#31
        ADD      r8,r3,r8,LSR #30
        ASR      r9,r8,#2
        LDRH     r8,[r2,#0xc]
        ADD      r3,r9,r8,LSL #16
        MOV      r4,r1
        ASR      r11,r1,#31
        ADD      r11,r1,r11,LSR #30
        ASR      r11,r11,#2
        MOV      r10,r1
        ASR      lr,r1,#31
        ADD      lr,r1,lr,LSR #30
        ASR      lr,lr,#2
        MUL      r9,r11,lr
        ASR      r11,r9,#31
        ADD      r11,r9,r11,LSR #19
        ASR      r11,r11,#13
        LDRSH    lr,[r2,#0xa]
        MUL      r8,r11,lr
        ASR      r11,r8,#31
        ADD      r11,r8,r11,LSR #29
        ASR      r11,r11,#3
        STR      r11,[sp,#4]
        LDRSH    r8,[r2,#8]
        MUL      r4,r8,r1
        ADD      r8,r4,r4,LSR #31
        ASR      r8,r8,#1
        STR      r8,[sp,#0]
        LDRD     r9,r8,[sp,#0]
        ADD      r4,r8,r9
        ASR      r8,r4,#31
        ADD      r8,r4,r8,LSR #14
        ASR      r1,r8,#18
        ADD      r8,r1,#0x8000
        LDRH     r9,[r2,#6]
        MUL      r4,r8,r9
        ASR      r8,r4,#31
        ADD      r8,r4,r8,LSR #17
        ASR      r1,r8,#15
        CBZ      r1,|L14.372|
        LDR      r4,[r6,#0]
        RSB      r7,r4,#0x100000
        ASR      r8,r3,#31
        ADD      r8,r3,r8,LSR #20
        SUB      r8,r7,r8,ASR #12
        MOV      r9,#0xc35
        MUL      r0,r8,r9
        CMP      r0,#0x80000000
        BCS      |L14.288|
        LSLS     r4,r0,#1
        UDIV     r0,r4,r1
        B        |L14.294|
|L14.288|
        UDIV     r4,r0,r1
        LSLS     r0,r4,#1
|L14.294|
        LSR      r8,r0,#3
        MUL      r8,r8,r8
        LSR      r8,r8,#13
        LDRSH    r9,[r2,#0x16]
        MUL      r4,r8,r9
        ASR      r8,r4,#31
        ADD      r8,r4,r8,LSR #20
        ASR      r1,r8,#12
        LSR      r8,r0,#2
        LDRSH    r9,[r2,#0x14]
        MUL      r4,r8,r9
        ASR      r8,r4,#31
        ADD      r8,r4,r8,LSR #19
        ASR      r3,r8,#13
        ADD      r8,r1,r3
        LDRSH    r9,[r2,#0x12]
        ADD      r4,r8,r9
        ASR      r8,r4,#31
        ADD      r8,r4,r8,LSR #28
        B        |L14.374|
|L14.372|
        B        |L14.394|
|L14.374|
        ADD      r0,r0,r8,ASR #4
        CMP      r0,r5
        BCS      |L14.386|
        MOV      r0,r5
        B        |L14.396|
|L14.386|
        CMP      r0,r12
        BLS      |L14.396|
        MOV      r0,r12
        B        |L14.396|
|L14.394|
        MOV      r0,r5
|L14.396|
        POP      {r2-r11,pc}
        ENDP

|L14.400|
        DCD      0x0001adb0

        AREA ||i.compensate_temperature||, CODE, READONLY, ALIGN=2

compensate_temperature PROC
        PUSH     {r4-r9,lr}
        MOV      r2,r0
        LDR      r5,|L15.136|
        MOV      r6,#0x2134
        LDR      r7,[r2,#4]
        LSR      r12,r7,#3
        LDRH     r7,[r1,#0]
        SUB      r3,r12,r7,LSL #1
        LDRSH    r12,[r1,#2]
        MUL      r7,r12,r3
        ASR      r12,r7,#31
        ADD      r12,r7,r12,LSR #21
        ASR      r3,r12,#11
        LDRH     r7,[r1,#0]
        LDR      r12,[r2,#4]
        RSB      r4,r7,r12,LSR #4
        MUL      r12,r4,r4
        ASR      r8,r12,#31
        ADD      r8,r12,r8,LSR #20
        ASR      r8,r8,#12
        LDRSH    r9,[r1,#4]
        MUL      r7,r8,r9
        ASR      r8,r7,#31
        ADD      r8,r7,r8,LSR #18
        ASR      r4,r8,#14
        ADDS     r7,r3,r4
        STR      r7,[r1,#0x24]
        LDR      r12,[r1,#0x24]
        ADD      r12,r12,r12,LSL #2
        ADD      r7,r12,#0x80
        ASR      r12,r7,#31
        ADD      r12,r7,r12,LSR #24
        ASR      r0,r12,#8
        CMP      r0,r5
        BGE      |L15.126|
        MOV      r0,r5
        B        |L15.132|
|L15.126|
        CMP      r0,r6
        BLE      |L15.132|
        MOV      r0,r6
|L15.132|
        POP      {r4-r9,pc}
        ENDP

|L15.136|
        DCD      0xfffff060

        AREA ||i.fill_filter_settings||, CODE, READONLY, ALIGN=1

fill_filter_settings PROC
        LDRB     r3,[r1,#3]
        LDRB     r2,[r0,#0]
        BFI      r2,r3,#2,#3
        STRB     r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.fill_osr_press_settings||, CODE, READONLY, ALIGN=1

fill_osr_press_settings PROC
        LDRB     r3,[r1,#0]
        LDRB     r2,[r0,#0]
        BFI      r2,r3,#2,#3
        STRB     r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.fill_osr_temp_settings||, CODE, READONLY, ALIGN=1

fill_osr_temp_settings PROC
        LDRB     r3,[r1,#1]
        LDRB     r2,[r0,#0]
        BFI      r2,r3,#5,#3
        STRB     r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.fill_standby_settings||, CODE, READONLY, ALIGN=1

fill_standby_settings PROC
        LDRB     r3,[r1,#4]
        LDRB     r2,[r0,#0]
        BFI      r2,r3,#5,#3
        STRB     r2,[r0,#0]
        BX       lr
        ENDP


        AREA ||i.get_calib_data||, CODE, READONLY, ALIGN=1

get_calib_data PROC
        PUSH     {r4-r6,lr}
        SUB      sp,sp,#0x20
        MOV      r4,r0
        MOVS     r6,#0x88
        MOVS     r1,#0x1c
        ADD      r0,sp,#4
        BL       __aeabi_memclr4
        MOV      r3,r4
        MOVS     r2,#0x1a
        ADD      r1,sp,#4
        MOV      r0,r6
        BL       bme280_get_regs
        MOV      r5,r0
        CBNZ     r5,|L20.66|
        MOV      r1,r4
        ADD      r0,sp,#4
        BL       parse_temp_press_calib_data
        MOVS     r6,#0xe1
        MOV      r3,r4
        MOVS     r2,#7
        ADD      r1,sp,#4
        MOV      r0,r6
        BL       bme280_get_regs
        MOV      r5,r0
        CBNZ     r5,|L20.66|
        MOV      r1,r4
        ADD      r0,sp,#4
        BL       parse_humidity_calib_data
|L20.66|
        MOV      r0,r5
        ADD      sp,sp,#0x20
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.interleave_reg_addr||, CODE, READONLY, ALIGN=1

interleave_reg_addr PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r0,#1
        B        |L21.28|
|L21.8|
        LDRB     r5,[r4,r0]
        MOVS     r6,#1
        RSB      r6,r6,r0,LSL #1
        STRB     r5,[r1,r6]
        LDRB     r5,[r2,r0]
        STRB     r5,[r1,r0,LSL #1]
        ADDS     r5,r0,#1
        UXTB     r0,r5
|L21.28|
        CMP      r0,r3
        BLT      |L21.8|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.null_ptr_check||, CODE, READONLY, ALIGN=1

null_ptr_check PROC
        MOV      r1,r0
        CBZ      r1,|L22.16|
        LDR      r2,[r1,#4]
        CBZ      r2,|L22.16|
        LDR      r2,[r1,#8]
        CBZ      r2,|L22.16|
        LDR      r2,[r1,#0xc]
        CBNZ     r2,|L22.22|
|L22.16|
        MOV      r0,#0xffffffff
        B        |L22.24|
|L22.22|
        MOVS     r0,#0
|L22.24|
        BX       lr
        ENDP


        AREA ||i.parse_device_settings||, CODE, READONLY, ALIGN=1

parse_device_settings PROC
        LDRB     r2,[r0,#0]
        AND      r2,r2,#7
        STRB     r2,[r1,#2]
        LDRB     r2,[r0,#2]
        UBFX     r2,r2,#2,#3
        STRB     r2,[r1,#0]
        LDRB     r2,[r0,#2]
        LSRS     r2,r2,#5
        STRB     r2,[r1,#1]
        LDRB     r2,[r0,#3]
        UBFX     r2,r2,#2,#3
        STRB     r2,[r1,#3]
        LDRB     r2,[r0,#3]
        LSRS     r2,r2,#5
        STRB     r2,[r1,#4]
        BX       lr
        ENDP


        AREA ||i.parse_humidity_calib_data||, CODE, READONLY, ALIGN=1

parse_humidity_calib_data PROC
        PUSH     {r4-r7,lr}
        MOV      r2,r1
        ADD      r1,r2,#0x10
        LDRB     r7,[r0,#0]
        LDRB     r12,[r0,#1]
        ORR      r7,r7,r12,LSL #8
        SXTH     r7,r7
        STRH     r7,[r1,#0x1a]
        LDRB     r7,[r0,#2]
        STRB     r7,[r1,#0x1c]
        LDRB     r7,[r0,#3]
        SXTB     r7,r7
        LSLS     r4,r7,#4
        LDRB     r7,[r0,#4]
        AND      r3,r7,#0xf
        ORR      r7,r4,r3
        STRH     r7,[r1,#0x1e]
        LDRB     r7,[r0,#5]
        SXTB     r7,r7
        LSLS     r6,r7,#4
        LDRB     r7,[r0,#4]
        ASRS     r5,r7,#4
        ORR      r7,r6,r5
        STRH     r7,[r1,#0x20]
        LDRB     r7,[r0,#6]
        SXTB     r7,r7
        STRB     r7,[r1,#0x22]
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.parse_temp_press_calib_data||, CODE, READONLY, ALIGN=1

parse_temp_press_calib_data PROC
        PUSH     {r4,lr}
        MOV      r2,r1
        ADD      r1,r2,#0x10
        LDRB     r3,[r0,#0]
        LDRB     r4,[r0,#1]
        ORR      r3,r3,r4,LSL #8
        STRH     r3,[r1,#0]
        LDRB     r3,[r0,#2]
        LDRB     r4,[r0,#3]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#2]
        LDRB     r3,[r0,#4]
        LDRB     r4,[r0,#5]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#4]
        LDRB     r3,[r0,#6]
        LDRB     r4,[r0,#7]
        ORR      r3,r3,r4,LSL #8
        STRH     r3,[r1,#6]
        LDRB     r3,[r0,#8]
        LDRB     r4,[r0,#9]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#8]
        LDRB     r3,[r0,#0xa]
        LDRB     r4,[r0,#0xb]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#0xa]
        LDRB     r3,[r0,#0xc]
        LDRB     r4,[r0,#0xd]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#0xc]
        LDRB     r3,[r0,#0xe]
        LDRB     r4,[r0,#0xf]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#0xe]
        LDRB     r3,[r0,#0x10]
        LDRB     r4,[r0,#0x11]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#0x10]
        LDRB     r3,[r0,#0x12]
        LDRB     r4,[r0,#0x13]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#0x12]
        LDRB     r3,[r0,#0x14]
        LDRB     r4,[r0,#0x15]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#0x14]
        LDRB     r3,[r0,#0x16]
        LDRB     r4,[r0,#0x17]
        ORR      r3,r3,r4,LSL #8
        SXTH     r3,r3
        STRH     r3,[r1,#0x16]
        LDRB     r3,[r0,#0x19]
        STRB     r3,[r1,#0x18]
        POP      {r4,pc}
        ENDP


        AREA ||i.put_device_to_sleep||, CODE, READONLY, ALIGN=1

put_device_to_sleep PROC
        PUSH     {r1-r5,lr}
        MOV      r4,r0
        MOV      r3,r4
        MOVS     r2,#4
        ADD      r1,sp,#8
        MOVS     r0,#0xf2
        BL       bme280_get_regs
        MOV      r5,r0
        CBNZ     r5,|L26.48|
        MOV      r1,sp
        ADD      r0,sp,#8
        BL       parse_device_settings
        MOV      r0,r4
        BL       bme280_soft_reset
        MOV      r5,r0
        CBNZ     r5,|L26.48|
        MOV      r1,r4
        MOV      r0,sp
        BL       reload_device_settings
        MOV      r5,r0
|L26.48|
        MOV      r0,r5
        POP      {r1-r5,pc}
        ENDP


        AREA ||i.reload_device_settings||, CODE, READONLY, ALIGN=1

reload_device_settings PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r2,r5
        MOV      r1,r4
        MOVS     r0,#0x1f
        BL       set_osr_settings
        MOV      r6,r0
        CBNZ     r6,|L27.32|
        MOV      r2,r5
        MOV      r1,r4
        MOVS     r0,#0x1f
        BL       set_filter_standby_settings
        MOV      r6,r0
|L27.32|
        MOV      r0,r6
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.set_filter_standby_settings||, CODE, READONLY, ALIGN=1

set_filter_standby_settings PROC
        PUSH     {r2-r8,lr}
        MOV      r4,r0
        MOV      r7,r1
        MOV      r5,r2
        MOVS     r0,#0xf5
        STR      r0,[sp,#4]
        MOV      r3,r5
        MOVS     r2,#1
        MOV      r1,sp
        LDRB     r0,[sp,#4]
        BL       bme280_get_regs
        MOV      r6,r0
        CBNZ     r6,|L28.74|
        AND      r0,r4,#8
        CBZ      r0,|L28.46|
        MOV      r1,r7
        MOV      r0,sp
        BL       fill_filter_settings
|L28.46|
        AND      r0,r4,#0x10
        CBZ      r0,|L28.60|
        MOV      r1,r7
        MOV      r0,sp
        BL       fill_standby_settings
|L28.60|
        MOV      r3,r5
        MOVS     r2,#1
        MOV      r1,sp
        ADD      r0,sp,#4
        BL       bme280_set_regs
        MOV      r6,r0
|L28.74|
        MOV      r0,r6
        POP      {r2-r8,pc}
        ENDP


        AREA ||i.set_osr_humidity_settings||, CODE, READONLY, ALIGN=1

set_osr_humidity_settings PROC
        PUSH     {r1-r7,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOVS     r0,#0xf2
        STR      r0,[sp,#0]
        LDRB     r0,[r5,#2]
        AND      r0,r0,#7
        STR      r0,[sp,#8]
        MOV      r3,r6
        MOVS     r2,#1
        ADD      r1,sp,#8
        MOV      r0,sp
        BL       bme280_set_regs
        MOV      r4,r0
        CBNZ     r4,|L29.70|
        MOVS     r0,#0xf4
        STR      r0,[sp,#0]
        MOV      r3,r6
        MOVS     r2,#1
        ADD      r1,sp,#4
        LDRB     r0,[sp,#0]
        BL       bme280_get_regs
        MOV      r4,r0
        CBNZ     r4,|L29.70|
        MOV      r3,r6
        MOVS     r2,#1
        ADD      r1,sp,#4
        MOV      r0,sp
        BL       bme280_set_regs
        MOV      r4,r0
|L29.70|
        MOV      r0,r4
        POP      {r1-r7,pc}
        ENDP


        AREA ||i.set_osr_press_temp_settings||, CODE, READONLY, ALIGN=1

set_osr_press_temp_settings PROC
        PUSH     {r2-r8,lr}
        MOV      r4,r0
        MOV      r7,r1
        MOV      r5,r2
        MOVS     r0,#0xf4
        STR      r0,[sp,#4]
        MOV      r3,r5
        MOVS     r2,#1
        MOV      r1,sp
        LDRB     r0,[sp,#4]
        BL       bme280_get_regs
        MOV      r6,r0
        CBNZ     r6,|L30.74|
        AND      r0,r4,#1
        CBZ      r0,|L30.46|
        MOV      r1,r7
        MOV      r0,sp
        BL       fill_osr_press_settings
|L30.46|
        AND      r0,r4,#2
        CBZ      r0,|L30.60|
        MOV      r1,r7
        MOV      r0,sp
        BL       fill_osr_temp_settings
|L30.60|
        MOV      r3,r5
        MOVS     r2,#1
        MOV      r1,sp
        ADD      r0,sp,#4
        BL       bme280_set_regs
        MOV      r6,r0
|L30.74|
        MOV      r0,r6
        POP      {r2-r8,pc}
        ENDP


        AREA ||i.set_osr_settings||, CODE, READONLY, ALIGN=1

set_osr_settings PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOVS     r7,#1
        AND      r0,r4,#4
        CBZ      r0,|L31.28|
        MOV      r1,r6
        MOV      r0,r5
        BL       set_osr_humidity_settings
        MOV      r7,r0
|L31.28|
        AND      r0,r4,#3
        CBZ      r0,|L31.46|
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       set_osr_press_temp_settings
        MOV      r7,r0
|L31.46|
        MOV      r0,r7
        POP      {r4-r8,pc}
        ENDP


        AREA ||i.write_power_mode||, CODE, READONLY, ALIGN=1

write_power_mode PROC
        PUSH     {r2-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOVS     r0,#0xf4
        STR      r0,[sp,#4]
        MOV      r3,r4
        MOVS     r2,#1
        MOV      r1,sp
        LDRB     r0,[sp,#4]
        BL       bme280_get_regs
        MOV      r5,r0
        CBNZ     r5,|L32.52|
        LDRB     r0,[sp,#0]
        BFI      r0,r6,#0,#2
        STR      r0,[sp,#0]
        MOV      r3,r4
        MOVS     r2,#1
        MOV      r1,sp
        ADD      r0,sp,#4
        BL       bme280_set_regs
        MOV      r5,r0
|L32.52|
        MOV      r0,r5
        POP      {r2-r6,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT bme280_compensate_data [CODE]
        EXPORT bme280_get_regs [CODE]
        EXPORT bme280_get_sensor_data [CODE]
        EXPORT bme280_get_sensor_mode [CODE]
        EXPORT bme280_get_sensor_settings [CODE]
        EXPORT bme280_init [CODE]
        EXPORT bme280_parse_sensor_data [CODE]
        EXPORT bme280_set_regs [CODE]
        EXPORT bme280_set_sensor_mode [CODE]
        EXPORT bme280_set_sensor_settings [CODE]
        EXPORT bme280_soft_reset [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_memclr4 [CODE]

        KEEP are_settings_changed
        KEEP compensate_humidity
        KEEP compensate_pressure
        KEEP compensate_temperature
        KEEP fill_filter_settings
        KEEP fill_osr_press_settings
        KEEP fill_osr_temp_settings
        KEEP fill_standby_settings
        KEEP get_calib_data
        KEEP interleave_reg_addr
        KEEP null_ptr_check
        KEEP parse_device_settings
        KEEP parse_humidity_calib_data
        KEEP parse_temp_press_calib_data
        KEEP put_device_to_sleep
        KEEP reload_device_settings
        KEEP set_filter_standby_settings
        KEEP set_osr_humidity_settings
        KEEP set_osr_press_temp_settings
        KEEP set_osr_settings
        KEEP write_power_mode

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
