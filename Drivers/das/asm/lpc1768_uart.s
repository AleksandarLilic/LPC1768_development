; generated by Component: ARM Compiler 5.06 update 5 (build 528) Tool: ArmCC [4d3621]
; commandline ArmCC [--c99 --split_sections --debug -c --asm -o.\objects\lpc1768_uart.o --depend=.\objects\lpc1768_uart.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Drivers -I.\RTE\Device\LPC1768 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.5.0\Device\Include -D__UVISION_VERSION=524 -D_RTE_ -DLPC175x_6x --omf_browse=.\objects\lpc1768_uart.crf Drivers\lpc1768_uart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.UART0_IRQHandler_F||, CODE, READONLY, ALIGN=2

UART0_IRQHandler_F PROC
        PUSH     {r4,lr}
        LDR      r3,|L1.88|
        LDR      r3,[r3,#8]
        UXTB     r0,r3
        AND      r2,r0,#1
        AND      r1,r0,#0xe
        ASRS     r1,r1,#1
        CBNZ     r2,|L1.84|
        CMP      r1,#1
        BEQ      |L1.74|
        CMP      r1,#2
        BEQ      |L1.46|
        CMP      r1,#3
        BEQ      |L1.38|
        CMP      r1,#6
        BNE      |L1.82|
        B        |L1.66|
|L1.38|
        MOVS     r3,#1
        LDR      r4,|L1.92|
        STR      r3,[r4,#0]  ; F0
        B        |L1.82|
|L1.46|
        MOVS     r3,#1
        LDR      r4,|L1.92|
        STR      r3,[r4,#4]  ; F0
        LDR      r3,|L1.88|
        LDR      r3,[r3,#4]
        BIC      r3,r3,#1
        LDR      r4,|L1.88|
        STR      r3,[r4,#4]
        B        |L1.82|
|L1.66|
        MOVS     r3,#1
        LDR      r4,|L1.92|
        STR      r3,[r4,#8]  ; F0
        B        |L1.82|
|L1.74|
        MOVS     r3,#1
        LDR      r4,|L1.92|
        STR      r3,[r4,#0xc]  ; F0
        NOP      
|L1.82|
        NOP      
|L1.84|
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.88|
        DCD      0x4000c000
|L1.92|
        DCD      ||F0||

        AREA ||i.UART2_IRQHandler_F||, CODE, READONLY, ALIGN=2

UART2_IRQHandler_F PROC
        PUSH     {r4,lr}
        LDR      r3,|L2.88|
        LDR      r3,[r3,#8]
        UXTB     r0,r3
        AND      r2,r0,#1
        AND      r1,r0,#0xe
        ASRS     r1,r1,#1
        CBNZ     r2,|L2.84|
        CMP      r1,#1
        BEQ      |L2.74|
        CMP      r1,#2
        BEQ      |L2.46|
        CMP      r1,#3
        BEQ      |L2.38|
        CMP      r1,#6
        BNE      |L2.82|
        B        |L2.66|
|L2.38|
        MOVS     r3,#1
        LDR      r4,|L2.92|
        STR      r3,[r4,#0]  ; F2
        B        |L2.82|
|L2.46|
        MOVS     r3,#1
        LDR      r4,|L2.92|
        STR      r3,[r4,#4]  ; F2
        LDR      r3,|L2.88|
        LDR      r3,[r3,#4]
        BIC      r3,r3,#1
        LDR      r4,|L2.88|
        STR      r3,[r4,#4]
        B        |L2.82|
|L2.66|
        MOVS     r3,#1
        LDR      r4,|L2.92|
        STR      r3,[r4,#8]  ; F2
        B        |L2.82|
|L2.74|
        MOVS     r3,#1
        LDR      r4,|L2.92|
        STR      r3,[r4,#0xc]  ; F2
        NOP      
|L2.82|
        NOP      
|L2.84|
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L2.88|
        DCD      0x40098000
|L2.92|
        DCD      ||F2||

        AREA ||i.UART3_IRQHandler_F||, CODE, READONLY, ALIGN=2

UART3_IRQHandler_F PROC
        PUSH     {r4,lr}
        LDR      r3,|L3.88|
        LDR      r3,[r3,#8]
        UXTB     r0,r3
        AND      r2,r0,#1
        AND      r1,r0,#0xe
        ASRS     r1,r1,#1
        CBNZ     r2,|L3.84|
        CMP      r1,#1
        BEQ      |L3.74|
        CMP      r1,#2
        BEQ      |L3.46|
        CMP      r1,#3
        BEQ      |L3.38|
        CMP      r1,#6
        BNE      |L3.82|
        B        |L3.66|
|L3.38|
        MOVS     r3,#1
        LDR      r4,|L3.92|
        STR      r3,[r4,#0]  ; F3
        B        |L3.82|
|L3.46|
        MOVS     r3,#1
        LDR      r4,|L3.92|
        STR      r3,[r4,#4]  ; F3
        LDR      r3,|L3.88|
        LDR      r3,[r3,#4]
        BIC      r3,r3,#1
        LDR      r4,|L3.88|
        STR      r3,[r4,#4]
        B        |L3.82|
|L3.66|
        MOVS     r3,#1
        LDR      r4,|L3.92|
        STR      r3,[r4,#8]  ; F3
        B        |L3.82|
|L3.74|
        MOVS     r3,#1
        LDR      r4,|L3.92|
        STR      r3,[r4,#0xc]  ; F3
        NOP      
|L3.82|
        NOP      
|L3.84|
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L3.88|
        DCD      0x4009c000
|L3.92|
        DCD      ||F3||

        AREA ||i.UART_Blocking_tx||, CODE, READONLY, ALIGN=1

UART_Blocking_tx PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        MOV      r0,r4
        BL       UART_D_THRE_I
        MOVS     r0,#1
        STRB     r0,[r4,#0x40]
        STR      r6,[r4,#0x38]
        STR      r5,[r4,#0]
        STR      r5,[r4,#0x3c]
        B        |L4.50|
|L4.28|
        LDR      r0,[r4,#0x44]
        LDRB     r0,[r0,#0x14]
        AND      r0,r0,#0x20
        CBZ      r0,|L4.50|
        MOV      r0,r4
        BL       UART_LtS
        MOV      r0,r4
        BL       UART_load_fifo
|L4.50|
        LDR      r0,[r4,#0x3c]
        CMP      r0,#0
        BNE      |L4.28|
        MOV      r0,r4
        BL       UART_E_THRE_I
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_D_RBR_I||, CODE, READONLY, ALIGN=1

UART_D_RBR_I PROC
        LDR      r1,[r0,#0x44]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#1
        LDR      r2,[r0,#0x44]
        STR      r1,[r2,#4]
        BX       lr
        ENDP


        AREA ||i.UART_D_THRE_I||, CODE, READONLY, ALIGN=1

UART_D_THRE_I PROC
        LDR      r1,[r0,#0x44]
        LDR      r1,[r1,#4]
        BIC      r1,r1,#2
        LDR      r2,[r0,#0x44]
        STR      r1,[r2,#4]
        BX       lr
        ENDP


        AREA ||i.UART_E_RBR_I||, CODE, READONLY, ALIGN=1

UART_E_RBR_I PROC
        LDR      r1,[r0,#0x44]
        LDR      r1,[r1,#4]
        ORR      r1,r1,#1
        LDR      r2,[r0,#0x44]
        STR      r1,[r2,#4]
        BX       lr
        ENDP


        AREA ||i.UART_E_THRE_I||, CODE, READONLY, ALIGN=1

UART_E_THRE_I PROC
        LDR      r1,[r0,#0x44]
        LDR      r1,[r1,#4]
        ORN      r1,r1,#2
        LDR      r2,[r0,#0x44]
        STR      r1,[r2,#4]
        BX       lr
        ENDP


        AREA ||i.UART_EnableBuffers||, CODE, READONLY, ALIGN=1

UART_EnableBuffers PROC
        MOVS     r1,#7
        LDR      r2,[r0,#0x14]
        STRB     r1,[r2,#8]
        BX       lr
        ENDP


        AREA ||i.UART_Format||, CODE, READONLY, ALIGN=1

UART_Format PROC
        PUSH     {r4-r7,lr}
        LDR      r4,[r0,#4]
        LDR      r5,[r0,#8]
        LDR      r6,[r0,#0xc]
        CMP      r4,#5
        BEQ      |L10.26|
        CMP      r4,#6
        BEQ      |L10.30|
        CMP      r4,#7
        BEQ      |L10.34|
        CMP      r4,#8
        BNE      |L10.42|
        B        |L10.38|
|L10.26|
        MOVS     r1,#0
        B        |L10.42|
|L10.30|
        MOVS     r1,#1
        B        |L10.42|
|L10.34|
        MOVS     r1,#2
        B        |L10.42|
|L10.38|
        MOVS     r1,#3
        NOP      
|L10.42|
        NOP      
        CMP      r5,#1
        BNE      |L10.52|
        MOVS     r2,#0
        B        |L10.54|
|L10.52|
        MOVS     r2,#1
|L10.54|
        CBNZ     r6,|L10.60|
        MOVS     r3,#0
        B        |L10.62|
|L10.60|
        MOVS     r3,#1
|L10.62|
        ORR      r7,r1,r2,LSL #4
        ORR      r7,r7,r3,LSL #8
        LDR      r12,[r0,#0x14]
        STRB     r7,[r12,#0xc]
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.UART_GetClock||, CODE, READONLY, ALIGN=2

UART_GetClock PROC
        PUSH     {r4,lr}
        MOV      r2,r0
        LDR      r3,[r2,#0x10]
        CBZ      r3,|L11.22|
        CMP      r3,#1
        BEQ      |L11.80|
        CMP      r3,#2
        BEQ      |L11.138|
        CMP      r3,#3
        BNE      |L11.258|
        B        |L11.198|
|L11.22|
        LDR      r4,|L11.264|
        LDR      r4,[r4,#0]
        UBFX     r1,r4,#6,#2
        CBZ      r1,|L11.46|
        CMP      r1,#1
        BEQ      |L11.54|
        CMP      r1,#2
        BEQ      |L11.60|
        CMP      r1,#3
        BNE      |L11.76|
        B        |L11.68|
|L11.46|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#2
        B        |L11.76|
|L11.54|
        LDR      r4,|L11.268|
        LDR      r0,[r4,#0]  ; SystemCoreClock
        B        |L11.76|
|L11.60|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#1
        B        |L11.76|
|L11.68|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#3
        NOP      
|L11.76|
        NOP      
        B        |L11.258|
|L11.80|
        LDR      r4,|L11.264|
        LDR      r4,[r4,#0]
        UBFX     r1,r4,#8,#2
        CBZ      r1,|L11.104|
        CMP      r1,#1
        BEQ      |L11.112|
        CMP      r1,#2
        BEQ      |L11.118|
        CMP      r1,#3
        BNE      |L11.134|
        B        |L11.126|
|L11.104|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#2
        B        |L11.134|
|L11.112|
        LDR      r4,|L11.268|
        LDR      r0,[r4,#0]  ; SystemCoreClock
        B        |L11.134|
|L11.118|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#1
        B        |L11.134|
|L11.126|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#3
        NOP      
|L11.134|
        NOP      
        B        |L11.258|
|L11.138|
        LDR      r4,|L11.264|
        ADDS     r4,r4,#4
        LDR      r4,[r4,#0]
        UBFX     r1,r4,#16,#2
        CBZ      r1,|L11.164|
        CMP      r1,#1
        BEQ      |L11.172|
        CMP      r1,#2
        BEQ      |L11.178|
        CMP      r1,#3
        BNE      |L11.194|
        B        |L11.186|
|L11.164|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#2
        B        |L11.194|
|L11.172|
        LDR      r4,|L11.268|
        LDR      r0,[r4,#0]  ; SystemCoreClock
        B        |L11.194|
|L11.178|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#1
        B        |L11.194|
|L11.186|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#3
        NOP      
|L11.194|
        NOP      
        B        |L11.258|
|L11.198|
        LDR      r4,|L11.264|
        ADDS     r4,r4,#4
        LDR      r4,[r4,#0]
        UBFX     r1,r4,#18,#2
        CBZ      r1,|L11.224|
        CMP      r1,#1
        BEQ      |L11.232|
        CMP      r1,#2
        BEQ      |L11.238|
        CMP      r1,#3
        BNE      |L11.254|
        B        |L11.246|
|L11.224|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#2
        B        |L11.254|
|L11.232|
        LDR      r4,|L11.268|
        LDR      r0,[r4,#0]  ; SystemCoreClock
        B        |L11.254|
|L11.238|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#1
        B        |L11.254|
|L11.246|
        LDR      r4,|L11.268|
        LDR      r4,[r4,#0]  ; SystemCoreClock
        LSRS     r0,r4,#3
        NOP      
|L11.254|
        NOP      
        NOP      
|L11.258|
        NOP      
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L11.264|
        DCD      0x400fc1a8
|L11.268|
        DCD      SystemCoreClock

        AREA ||i.UART_Get_Number||, CODE, READONLY, ALIGN=2

UART_Get_Number PROC
        LDR      r3,|L12.92|
        LDR      r2,[r0,#0x14]
        CMP      r2,r3
        BNE      |L12.20|
        MOVS     r2,#0
        STR      r2,[r0,#0x10]
        LDR      r2,|L12.96|
        LDR      r2,[r2,#0]  ; F0_ptr
        STR      r2,[r1,#0x48]
        B        |L12.58|
|L12.20|
        LDR      r3,|L12.100|
        LDR      r2,[r0,#0x14]
        CMP      r2,r3
        BNE      |L12.40|
        MOVS     r2,#2
        STR      r2,[r0,#0x10]
        LDR      r2,|L12.104|
        LDR      r2,[r2,#0]  ; F2_ptr
        STR      r2,[r1,#0x48]
        B        |L12.58|
|L12.40|
        LDR      r3,|L12.108|
        LDR      r2,[r0,#0x14]
        CMP      r2,r3
        BNE      |L12.58|
        MOVS     r2,#3
        STR      r2,[r0,#0x10]
        LDR      r2,|L12.112|
        LDR      r2,[r2,#0]  ; F3_ptr
        STR      r2,[r1,#0x48]
|L12.58|
        LDR      r2,[r0,#0x14]
        STR      r2,[r1,#0x44]
        LDRB     r2,[r0,#0x10]
        STRB     r2,[r1,#0x43]
        MOVS     r2,#0
        STRB     r2,[r1,#0x41]
        LDR      r3,[r1,#0x48]
        STR      r2,[r3,#0]
        LDR      r3,[r1,#0x48]
        STR      r2,[r3,#4]
        LDR      r3,[r1,#0x48]
        STR      r2,[r3,#8]
        LDR      r3,[r1,#0x48]
        STR      r2,[r3,#0xc]
        BX       lr
        ENDP

|L12.92|
        DCD      0x4000c000
|L12.96|
        DCD      F0_ptr
|L12.100|
        DCD      0x40098000
|L12.104|
        DCD      F2_ptr
|L12.108|
        DCD      0x4009c000
|L12.112|
        DCD      F3_ptr

        AREA ||i.UART_IRQ_tx||, CODE, READONLY, ALIGN=1

UART_IRQ_tx PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r6,r1
        MOV      r5,r2
        LDR      r0,[r4,#0x48]
        LDR      r0,[r0,#0xc]
        CBNZ     r0,|L13.76|
        LDR      r0,[r4,#0x44]
        LDRB     r0,[r0,#0x14]
        AND      r0,r0,#0x20
        CBZ      r0,|L13.62|
        MOVS     r0,#1
        STRB     r0,[r4,#0x40]
        STR      r6,[r4,#0x38]
        STR      r5,[r4,#0]
        STR      r5,[r4,#0x3c]
        MOV      r0,r4
        BL       UART_LtS
        MOV      r0,r4
        BL       UART_load_fifo
        LDR      r0,[r4,#0x44]
        LDR      r0,[r0,#4]
        ORR      r0,r0,#2
        LDR      r1,[r4,#0x44]
        STR      r0,[r1,#4]
        B        |L13.166|
|L13.62|
        LDR      r0,[r4,#0x44]
        LDR      r0,[r0,#4]
        ORR      r0,r0,#2
        LDR      r1,[r4,#0x44]
        STR      r0,[r1,#4]
        B        |L13.166|
|L13.76|
        MOVS     r0,#0
        LDR      r1,[r4,#0x48]
        STR      r0,[r1,#0xc]
        LDR      r0,[r4,#0x3c]
        CBNZ     r0,|L13.100|
        MOV      r0,r4
        BL       UART_D_THRE_I
        MOVS     r0,#0
        STRB     r0,[r4,#0x40]
        B        |L13.166|
|L13.100|
        LDRB     r0,[r4,#0x40]
        CBNZ     r0,|L13.132|
        MOVS     r0,#1
        STRB     r0,[r4,#0x40]
        STR      r6,[r4,#0x38]
        STR      r5,[r4,#0]
        STR      r5,[r4,#0x3c]
        MOV      r0,r4
        BL       UART_LtS
        MOV      r0,r4
        BL       UART_load_fifo
        B        |L13.166|
|L13.132|
        MOVS     r0,#0
        LDR      r1,[r4,#0x48]
        STR      r0,[r1,#0xc]
        MOV      r0,r4
        BL       UART_LtS
        MOV      r0,r4
        BL       UART_load_fifo
        LDR      r0,[r4,#0x3c]
        CBNZ     r0,|L13.166|
        MOV      r0,r4
        BL       UART_D_THRE_I
        MOVS     r0,#0
        STRB     r0,[r4,#0x40]
|L13.166|
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_Init||, CODE, READONLY, ALIGN=1

UART_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       UART_Get_Number
        MOV      r0,r4
        BL       UART_Power_Enable
        MOV      r0,r4
        BL       UART_GetClock
        MOV      r6,r0
        MOV      r1,r6
        MOV      r0,r4
        BL       UART_SetBaudRate
        MOV      r0,r4
        BL       UART_EnableBuffers
        MOV      r0,r4
        BL       UART_PinInit
        MOV      r0,r4
        BL       UART_Format
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_LtS||, CODE, READONLY, ALIGN=1

UART_LtS PROC
        PUSH     {r4-r7,lr}
        MOVS     r4,#0
        LDR      r2,[r0,#0]
        SUBS     r5,r2,#1
        LDR      r2,[r0,#0x3c]
        SUBS     r1,r2,#1
        CMP      r1,#3
        BCC      |L15.20|
        MOVS     r4,#4
        B        |L15.22|
|L15.20|
        ADDS     r4,r1,#1
|L15.22|
        B        |L15.82|
|L15.24|
        SUBS     r6,r5,r1
        LDR      r2,[r0,#0x38]
        LDR      r3,[r2,r6,LSL #2]
        LDR      r2,[r0,#0x3c]
        SUBS     r2,r2,#1
        STR      r2,[r0,#0x3c]
        MOVS     r2,#0
        B        |L15.74|
|L15.42|
        LSLS     r6,r2,#3
        LSR      r6,r3,r6
        UXTB     r7,r6
        LDRB     r12,[r0,#0x41]
        ADD      r6,r0,#8
        STRB     r7,[r6,r12]
        LDRB     r6,[r0,#0x41]
        ADDS     r6,r6,#1
        STRB     r6,[r0,#0x41]
        ADDS     r2,r2,#1
|L15.74|
        CMP      r2,#4
        BLT      |L15.42|
        SUBS     r1,r1,#1
        SUBS     r4,r4,#1
|L15.82|
        CMP      r4,#0
        BNE      |L15.24|
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.UART_PinInit||, CODE, READONLY, ALIGN=1

UART_PinInit PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r5,[r4,#0x10]
        CBZ      r5,|L16.22|
        CMP      r5,#1
        BEQ      |L16.44|
        CMP      r5,#2
        BEQ      |L16.66|
        CMP      r5,#3
        BNE      |L16.110|
        B        |L16.88|
|L16.22|
        MOVS     r2,#1
        MOVS     r1,#2
        MOVS     r0,#0
        BL       GPIO_PinFunction
        MOVS     r2,#1
        MOVS     r1,#3
        MOVS     r0,#0
        BL       GPIO_PinFunction
        B        |L16.110|
|L16.44|
        MOVS     r2,#1
        MOVS     r1,#0xf
        MOVS     r0,#0
        BL       GPIO_PinFunction
        MOVS     r2,#1
        MOVS     r1,#0x10
        MOVS     r0,#0
        BL       GPIO_PinFunction
        B        |L16.110|
|L16.66|
        MOVS     r2,#1
        MOVS     r1,#0xa
        MOVS     r0,#0
        BL       GPIO_PinFunction
        MOVS     r2,#1
        MOVS     r1,#0xb
        MOVS     r0,#0
        BL       GPIO_PinFunction
        B        |L16.110|
|L16.88|
        MOVS     r2,#2
        MOVS     r1,#0
        MOV      r0,r1
        BL       GPIO_PinFunction
        MOVS     r2,#2
        MOVS     r1,#1
        MOVS     r0,#0
        BL       GPIO_PinFunction
        NOP      
|L16.110|
        NOP      
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.UART_Power_Disable||, CODE, READONLY, ALIGN=2

UART_Power_Disable PROC
        LDR      r1,[r0,#0x10]
        CBZ      r1,|L17.18|
        CMP      r1,#1
        BEQ      |L17.36|
        CMP      r1,#2
        BEQ      |L17.54|
        CMP      r1,#3
        BNE      |L17.90|
        B        |L17.72|
|L17.18|
        LDR      r2,|L17.96|
        LDR      r2,[r2,#0]
        BIC      r2,r2,#8
        LDR      r3,|L17.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        B        |L17.90|
|L17.36|
        LDR      r2,|L17.96|
        LDR      r2,[r2,#0]
        BIC      r2,r2,#0x10
        LDR      r3,|L17.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        B        |L17.90|
|L17.54|
        LDR      r2,|L17.96|
        LDR      r2,[r2,#0]
        BIC      r2,r2,#0x1000000
        LDR      r3,|L17.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        B        |L17.90|
|L17.72|
        LDR      r2,|L17.96|
        LDR      r2,[r2,#0]
        BIC      r2,r2,#0x2000000
        LDR      r3,|L17.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        NOP      
|L17.90|
        NOP      
        BX       lr
        ENDP

        DCW      0x0000
|L17.96|
        DCD      0x400fc0c4

        AREA ||i.UART_Power_Enable||, CODE, READONLY, ALIGN=2

UART_Power_Enable PROC
        LDR      r1,[r0,#0x10]
        CBZ      r1,|L18.18|
        CMP      r1,#1
        BEQ      |L18.36|
        CMP      r1,#2
        BEQ      |L18.54|
        CMP      r1,#3
        BNE      |L18.90|
        B        |L18.72|
|L18.18|
        LDR      r2,|L18.96|
        LDR      r2,[r2,#0]
        ORR      r2,r2,#8
        LDR      r3,|L18.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        B        |L18.90|
|L18.36|
        LDR      r2,|L18.96|
        LDR      r2,[r2,#0]
        ORR      r2,r2,#0x10
        LDR      r3,|L18.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        B        |L18.90|
|L18.54|
        LDR      r2,|L18.96|
        LDR      r2,[r2,#0]
        ORR      r2,r2,#0x1000000
        LDR      r3,|L18.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        B        |L18.90|
|L18.72|
        LDR      r2,|L18.96|
        LDR      r2,[r2,#0]
        ORR      r2,r2,#0x2000000
        LDR      r3,|L18.96|
        SUBS     r3,r3,#0xc4
        STR      r2,[r3,#0xc4]
        NOP      
|L18.90|
        NOP      
        BX       lr
        ENDP

        DCW      0x0000
|L18.96|
        DCD      0x400fc0c4

        AREA ||i.UART_SetBaudRate||, CODE, READONLY, ALIGN=1

UART_SetBaudRate PROC
        PUSH     {r4,r5,lr}
        LDR      r3,[r0,#0]
        LSLS     r4,r3,#4
        UDIV     r2,r1,r4
        LDR      r4,[r0,#0x14]
        LDRB     r4,[r4,#0xc]
        ORR      r4,r4,#0x80
        LDR      r5,[r0,#0x14]
        STRB     r4,[r5,#0xc]
        LDR      r5,[r0,#0x14]
        STRB     r2,[r5,#0]
        LSRS     r4,r2,#8
        LDR      r5,[r0,#0x14]
        STRB     r4,[r5,#4]
        LDR      r4,[r0,#0x14]
        LDRB     r4,[r4,#0xc]
        BIC      r4,r4,#0x80
        LDR      r5,[r0,#0x14]
        STRB     r4,[r5,#0xc]
        POP      {r4,r5,pc}
        ENDP


        AREA ||i.UART_load_fifo||, CODE, READONLY, ALIGN=1

UART_load_fifo PROC
        PUSH     {r4,lr}
        MOVS     r1,#0
        LDRB     r3,[r0,#0x41]
        SUBS     r2,r3,#1
        B        |L20.24|
|L20.12|
        ADD      r3,r0,#8
        LDRB     r3,[r3,r1]
        LDR      r4,[r0,#0x44]
        STRB     r3,[r4,#0]
        ADDS     r1,r1,#1
|L20.24|
        CMP      r1,r2
        BLS      |L20.12|
        MOVS     r3,#0
        STRB     r3,[r0,#0x41]
        POP      {r4,pc}
        ENDP


        AREA ||i.UART_rx||, CODE, READONLY, ALIGN=1

UART_rx PROC
        PUSH     {lr}
        MOV      r3,r0
        MOVS     r0,#0
        LDR      r1,[r3,#0x48]
        STR      r0,[r1,#4]
        LDRB     r0,[r3,#0x42]
        CMP      r0,#0x20
        BLE      |L21.24|
        MOVS     r0,#0
        STRB     r0,[r3,#0x42]
|L21.24|
        LDR      r0,[r3,#0x44]
        LDRB     r1,[r0,#0]
        LDRB     r2,[r3,#0x42]
        ADD      r0,r3,#0x18
        STRB     r1,[r0,r2]
        LDRB     r0,[r3,#0x42]
        ADDS     r0,r0,#1
        STRB     r0,[r3,#0x42]
        MOV      r0,r3
        BL       UART_E_RBR_I
        POP      {pc}
        ENDP


        AREA ||i.UART_tx||, CODE, READONLY, ALIGN=1

UART_tx PROC
        PUSH     {r4-r8,lr}
        MOV      r5,r0
        MOV      r6,r1
        MOV      r7,r2
        MOV      r4,r3
        CBNZ     r4,|L22.26|
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r5
        BL       UART_Blocking_tx
        B        |L22.40|
|L22.26|
        CMP      r4,#1
        BNE      |L22.40|
        MOV      r2,r7
        MOV      r1,r6
        MOV      r0,r5
        BL       UART_IRQ_tx
|L22.40|
        POP      {r4-r8,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

||F0||
        %        16
||F2||
        %        16
||F3||
        %        16

        AREA ||.data||, DATA, ALIGN=2

F0_ptr
        DCD      ||F0||
F2_ptr
        DCD      ||F2||
F3_ptr
        DCD      ||F3||

;*** Start embedded assembler ***

#line 1 "Drivers\\lpc1768_uart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_lpc1768_uart_c_F0_ptr____REV16|
#line 463 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.4.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___14_lpc1768_uart_c_F0_ptr____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_lpc1768_uart_c_F0_ptr____REVSH|
#line 478
|__asm___14_lpc1768_uart_c_F0_ptr____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_lpc1768_uart_c_F0_ptr____RRX|
#line 665
|__asm___14_lpc1768_uart_c_F0_ptr____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT UART0_IRQHandler_F [CODE]
        EXPORT UART2_IRQHandler_F [CODE]
        EXPORT UART3_IRQHandler_F [CODE]
        EXPORT UART_D_RBR_I [CODE]
        EXPORT UART_D_THRE_I [CODE]
        EXPORT UART_E_RBR_I [CODE]
        EXPORT UART_E_THRE_I [CODE]
        EXPORT UART_Init [CODE]
        EXPORT UART_rx [CODE]
        EXPORT UART_tx [CODE]
        EXPORT ||F0|| [DATA,SIZE=16]
        EXPORT ||F2|| [DATA,SIZE=16]
        EXPORT ||F3|| [DATA,SIZE=16]
        EXPORT F0_ptr [DATA,SIZE=4]
        EXPORT F2_ptr [DATA,SIZE=4]
        EXPORT F3_ptr [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SystemCoreClock [DATA]
        IMPORT GPIO_PinFunction [CODE]

        KEEP UART_Blocking_tx
        KEEP UART_EnableBuffers
        KEEP UART_Format
        KEEP UART_GetClock
        KEEP UART_Get_Number
        KEEP UART_IRQ_tx
        KEEP UART_LtS
        KEEP UART_PinInit
        KEEP UART_Power_Disable
        KEEP UART_Power_Enable
        KEEP UART_SetBaudRate
        KEEP UART_load_fifo

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
